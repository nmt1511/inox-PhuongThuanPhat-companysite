"use client"

import { useState, useEffect } from "react"
import { Phone, Mail, MapPin, ArrowRight, Search, Star } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import Header from "@/components/header"
import { FirebaseDB, type Product, type Category } from "@/lib/firebase-db"

export default function ProductsPage() {
  const [products, setProducts] = useState<Product[]>([])
  const [categories, setCategories] = useState<Category[]>([])
  const [loading, setLoading] = useState(true)
  const [searchTerm, setSearchTerm] = useState("")
  const [selectedCategory, setSelectedCategory] = useState("T·∫•t c·∫£")

  useEffect(() => {
    const loadData = async () => {
      try {
        const [productsData, categoriesData] = await Promise.all([FirebaseDB.getProducts(), FirebaseDB.getCategories()])
        setProducts(productsData)
        setCategories(categoriesData)
      } catch (error) {
        console.error("Error loading data:", error)
      } finally {
        setLoading(false)
      }
    }

    loadData()
  }, [])

  const filteredProducts = products.filter((product) => {
    const matchesSearch =
      product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      (product.description && product.description.toLowerCase().includes(searchTerm.toLowerCase()))
    const matchesCategory = selectedCategory === "T·∫•t c·∫£" || product.category === selectedCategory
    return matchesSearch && matchesCategory && product.status === "active"
  })

  const productCategories = categories
    .map((category) => ({
      title: category.name,
      description:
        category.description || `S·∫£n ph·∫©m ${category.name} ch·∫•t l∆∞·ª£ng cao v·ªõi ƒëa d·∫°ng k√≠ch th∆∞·ªõc v√† ·ª©ng d·ª•ng`,
      products: filteredProducts.filter((product) => product.category === category.name).slice(0, 4),
    }))
    .filter((category) => category.products.length > 0)

  const handlePhoneCall = () => {
    window.location.href = "tel:0909189008"
  }

  const handleConsultation = () => {
    window.location.href = "/lien-he"
  }

  const handleQuoteRequest = () => {
    window.location.href = "/lien-he"
  }

  const services = [
    {
      title: "C·∫Øt laser",
      description: "C√¥ng ngh·ªá c·∫Øt laser hi·ªán ƒë·∫°i, ƒë·ªô ch√≠nh x√°c cao v√† b·ªÅ m·∫∑t ho√†n thi·ªán tuy·ªát v·ªùi",
      features: ["ƒê·ªô ch√≠nh x√°c ¬±0.1mm", "C·∫Øt ƒë∆∞·ª£c ƒë·ªô d√†y 0.5-25mm", "T·ªëc ƒë·ªô c·∫Øt nhanh", "B·ªÅ m·∫∑t c·∫Øt nh·∫µn"],
      icon: "‚ö°",
    },
    {
      title: "C·∫Øt plasma",
      description: "Gi·∫£i ph√°p c·∫Øt plasma hi·ªáu qu·∫£ cho t·∫•m d√†y, t·ªëi ∆∞u chi ph√≠ s·∫£n xu·∫•t",
      features: ["C·∫Øt ƒë∆∞·ª£c ƒë·ªô d√†y 3-100mm", "T·ªëc ƒë·ªô c·∫Øt cao", "Chi ph√≠ h·ª£p l√Ω", "Ph√π h·ª£p s·∫£n xu·∫•t h√†ng lo·∫°t"],
      icon: "üî•",
    },
    {
      title: "Ch·∫•n u·ªën",
      description: "D·ªãch v·ª• gia c√¥ng ch·∫•n u·ªën ch√≠nh x√°c theo b·∫£n v·∫Ω k·ªπ thu·∫≠t",
      features: ["Ch·∫•n ch√≠nh x√°c theo b·∫£n v·∫Ω", "G√≥c ch·∫•n ƒëa d·∫°ng", "B·ªÅ m·∫∑t kh√¥ng b·ªã x∆∞·ªõc", "Gia c√¥ng theo y√™u c·∫ßu"],
      icon: "üîß",
    },
  ]

  if (loading) {
    return (
      <div className="min-h-screen bg-background">
        <Header />
        <div className="flex items-center justify-center min-h-[400px] pt-32">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
            <p className="text-muted-foreground">ƒêang t·∫£i s·∫£n ph·∫©m...</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-background">
      <Header />

      <section className="pt-32 pb-24 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-background via-muted/20 to-background"></div>
        <div className="container mx-auto px-6 relative z-10">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-display text-balance mb-8 fade-in">
              S·∫£n ph·∫©m &<span className="block text-primary">d·ªãch v·ª•</span>
            </h1>
            <p className="text-elegant text-muted-foreground max-w-2xl mx-auto mb-12 fade-in">
              Kh√°m ph√° b·ªô s∆∞u t·∫≠p s·∫£n ph·∫©m inox ch·∫•t l∆∞·ª£ng cao v√† d·ªãch v·ª• gia c√¥ng chuy√™n nghi·ªáp c·ªßa ch√∫ng t√¥i
            </p>
            <div className="flex flex-col sm:flex-row items-center justify-center gap-4 fade-in">
              <div className="relative flex-1 max-w-md">
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground" />
                <input
                  type="text"
                  placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="w-full pl-10 pr-4 py-3 border border-border rounded-lg bg-background font-light focus:outline-none focus:ring-2 focus:ring-primary/20"
                />
              </div>
              <select
                value={selectedCategory}
                onChange={(e) => setSelectedCategory(e.target.value)}
                className="px-4 py-3 border border-border rounded-lg bg-background font-light focus:outline-none focus:ring-2 focus:ring-primary/20"
              >
                <option value="T·∫•t c·∫£">T·∫•t c·∫£ danh m·ª•c</option>
                {categories.map((category) => (
                  <option key={category.id} value={category.name}>
                    {category.name}
                  </option>
                ))}
              </select>
            </div>
          </div>
        </div>
      </section>

      {productCategories.length === 0 ? (
        <section className="py-24">
          <div className="container mx-auto px-6 text-center">
            <p className="text-muted-foreground">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o ph√π h·ª£p v·ªõi ti√™u ch√≠ t√¨m ki·∫øm.</p>
          </div>
        </section>
      ) : (
        productCategories.map((category, categoryIndex) => (
          <section key={categoryIndex} className={`py-24 ${categoryIndex % 2 === 0 ? "" : "bg-muted/30"}`}>
            <div className="container mx-auto px-6">
              <div className="text-center mb-16">
                <h2 className="text-3xl font-light text-balance mb-4">{category.title}</h2>
                <p className="text-elegant text-muted-foreground max-w-2xl mx-auto">{category.description}</p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                {category.products.map((product, productIndex) => (
                  <Card key={productIndex} className="elegant-hover border-0 shadow-lg bg-card group">
                    <CardContent className="p-0">
                      <div className="aspect-square overflow-hidden rounded-t-lg relative">
                        <img
                          src={product.image_url || `/placeholder.svg?height=300&width=300&query=${product.name}`}
                          alt={product.name}
                          className="w-full h-full object-cover grayscale group-hover:grayscale-0 transition-all duration-500"
                        />
                        <div className="absolute top-4 right-4">
                          <Badge
                            variant={product.isFeatured ? "default" : "secondary"}
                            className={`${
                              product.isFeatured
                                ? "bg-primary text-primary-foreground"
                                : "bg-muted text-muted-foreground"
                            } font-light`}
                          >
                            {product.isFeatured ? "N·ªïi b·∫≠t" : "Ti√™u chu·∫©n"}
                          </Badge>
                        </div>
                      </div>
                      <div className="p-6">
                        <h3 className="text-xl font-light mb-2">{product.name}</h3>
                        <p className="text-muted-foreground font-light text-sm mb-2">
                          {product.specifications || `${product.price.toLocaleString("vi-VN")} VNƒê/${product.unit}`}
                        </p>
                        <p className="text-muted-foreground font-light text-xs mb-4">
                          T·ªìn kho: {product.stock} {product.unit}
                        </p>
                        <div className="flex items-center justify-between">
                          <div className="flex items-center gap-1">
                            {[...Array(5)].map((_, i) => (
                              <Star key={i} className="w-4 h-4 fill-primary text-primary" />
                            ))}
                          </div>
                          <Button
                            variant="ghost"
                            className="p-0 h-auto font-light text-primary"
                            onClick={handleConsultation}
                          >
                            Chi ti·∫øt ‚Üí
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        ))
      )}

      <section className="py-24 bg-primary text-primary-foreground">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-3xl font-light text-balance mb-4">D·ªãch v·ª• gia c√¥ng</h2>
            <p className="text-elegant opacity-90 max-w-2xl mx-auto">
              D·ªãch v·ª• gia c√¥ng chuy√™n nghi·ªáp v·ªõi c√¥ng ngh·ªá hi·ªán ƒë·∫°i v√† ƒë·ªôi ng≈© k·ªπ thu·∫≠t gi√†u kinh nghi·ªám
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {services.map((service, index) => (
              <Card key={index} className="elegant-hover border-0 shadow-lg bg-card">
                <CardContent className="p-8 text-center">
                  <div className="text-4xl mb-6">{service.icon}</div>
                  <h3 className="text-xl font-light mb-4 text-foreground">{service.title}</h3>
                  <p className="text-muted-foreground font-light leading-relaxed mb-6">{service.description}</p>
                  <div className="space-y-3">
                    {service.features.map((feature, featureIndex) => (
                      <div key={featureIndex} className="flex items-center gap-3">
                        <div className="w-2 h-2 bg-primary rounded-full flex-shrink-0"></div>
                        <span className="text-sm font-light text-muted-foreground">{feature}</span>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section className="py-24">
        <div className="container mx-auto px-6">
          <div className="text-center mb-16">
            <h2 className="text-3xl font-light text-balance mb-4">Th√¥ng s·ªë k·ªπ thu·∫≠t</h2>
            <p className="text-elegant text-muted-foreground max-w-2xl mx-auto">
              Th√¥ng tin chi ti·∫øt v·ªÅ c√°c lo·∫°i inox ch√∫ng t√¥i cung c·∫•p
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {[
              {
                title: "INOX 304",
                specs: {
                  "Th√†nh ph·∫ßn": "18% Cr, 8% Ni",
                  "ƒê·ªô b·ªÅn": "Cao",
                  "Ch·ªëng ƒÉn m√≤n": "T·ªët",
                  "·ª®ng d·ª•ng": "D√¢n d·ª•ng, th·ª±c ph·∫©m",
                  "T·ª´ t√≠nh": "Kh√¥ng t·ª´ t√≠nh",
                  H√†n: "D·ªÖ h√†n",
                },
              },
              {
                title: "INOX 316",
                specs: {
                  "Th√†nh ph·∫ßn": "18% Cr, 10% Ni, 2% Mo",
                  "ƒê·ªô b·ªÅn": "R·∫•t cao",
                  "Ch·ªëng ƒÉn m√≤n": "Xu·∫•t s·∫Øc",
                  "·ª®ng d·ª•ng": "Y t·∫ø, h√≥a ch·∫•t",
                  "T·ª´ t√≠nh": "Kh√¥ng t·ª´ t√≠nh",
                  H√†n: "D·ªÖ h√†n",
                },
              },
              {
                title: "INOX 201",
                specs: {
                  "Th√†nh ph·∫ßn": "17% Cr, 4% Ni, Mn",
                  "ƒê·ªô b·ªÅn": "Trung b√¨nh",
                  "Ch·ªëng ƒÉn m√≤n": "Kh√°",
                  "·ª®ng d·ª•ng": "Trang tr√≠, n·ªôi th·∫•t",
                  "T·ª´ t√≠nh": "Y·∫øu t·ª´ t√≠nh",
                  H√†n: "Kh√≥ h√†n h∆°n",
                },
              },
              {
                title: "INOX 430",
                specs: {
                  "Th√†nh ph·∫ßn": "17% Cr",
                  "ƒê·ªô b·ªÅn": "Trung b√¨nh",
                  "Ch·ªëng ƒÉn m√≤n": "Kh√°",
                  "·ª®ng d·ª•ng": "ƒê·ªì gia d·ª•ng",
                  "T·ª´ t√≠nh": "C√≥ t·ª´ t√≠nh",
                  H√†n: "D·ªÖ h√†n",
                },
              },
            ].map((steel, index) => (
              <Card key={index} className="elegant-hover border-0 shadow-lg bg-card">
                <CardContent className="p-8">
                  <h3 className="text-2xl font-light mb-6">{steel.title}</h3>
                  <div className="space-y-4">
                    {Object.entries(steel.specs).map(([key, value]) => (
                      <div key={key} className="flex justify-between items-center py-2 border-b border-border/50">
                        <span className="font-light text-muted-foreground">{key}:</span>
                        <span className="font-light">{value}</span>
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      <section className="py-24 bg-muted/30">
        <div className="container mx-auto px-6">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-hero text-balance mb-8">C·∫ßn t∆∞ v·∫•n s·∫£n ph·∫©m?</h2>
            <p className="text-elegant text-muted-foreground mb-12">
              ƒê·ªôi ng≈© chuy√™n gia c·ªßa ch√∫ng t√¥i s·∫µn s√†ng t∆∞ v·∫•n v√† ƒë∆∞a ra gi·∫£i ph√°p t·ªëi ∆∞u cho d·ª± √°n c·ªßa b·∫°n
            </p>
            <div className="flex flex-col sm:flex-row items-center justify-center gap-6">
              <Button size="lg" className="px-8 py-4 text-base font-light" onClick={handlePhoneCall}>
                <Phone className="mr-2 w-4 h-4" />
                Hotline: 0909 189 008
              </Button>
              <Button
                variant="outline"
                size="lg"
                className="px-8 py-4 text-base font-light bg-transparent"
                onClick={handleQuoteRequest}
              >
                G·ª≠i y√™u c·∫ßu b√°o gi√°
                <ArrowRight className="ml-2 w-4 h-4" />
              </Button>
            </div>
          </div>
        </div>
      </section>

      <footer className="bg-primary text-primary-foreground">
        <div className="container mx-auto px-6 py-16">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-12">
            <div className="md:col-span-2">
              <h3 className="text-2xl font-light mb-6">Ph∆∞∆°ng Thu·∫≠n Ph√°t</h3>
              <p className="font-light leading-relaxed mb-8 opacity-90">
                Chuy√™n cung c·∫•p v√† gia c√¥ng v·∫≠t t∆∞ inox ch·∫•t l∆∞·ª£ng cao, ph·ª•c v·ª• c√°c d·ª± √°n t·ª´ d√¢n d·ª•ng ƒë·∫øn c√¥ng nghi·ªáp
                v·ªõi uy t√≠n v√† ch·∫•t l∆∞·ª£ng h√†ng ƒë·∫ßu.
              </p>
              <div className="space-y-3">
                <div className="flex items-center gap-3">
                  <Phone className="w-4 h-4 opacity-70" />
                  <span className="font-light">0909 189 008</span>
                </div>
                <div className="flex items-center gap-3">
                  <Mail className="w-4 h-4 opacity-70" />
                  <span className="font-light">thuanphat333@gmail.com</span>
                </div>
                <div className="flex items-start gap-3">
                  <MapPin className="w-4 h-4 opacity-70 mt-1" />
                  <span className="font-light">
                    1038 Hu·ª≥nh VƒÉn L≈©y, P.8, P.Ph√∫ M·ªπ
                    <br />
                    TP Th·ªß D·∫ßu M·ªôt, B√¨nh D∆∞∆°ng
                  </span>
                </div>
              </div>
            </div>

            <div>
              <h4 className="font-medium mb-6">S·∫£n ph·∫©m</h4>
              <ul className="space-y-3 font-light opacity-90">
                <li>
                  <a href="/san-pham" className="hover:opacity-100 transition-opacity">
                    T·∫•m inox
                  </a>
                </li>
                <li>
                  <a href="/san-pham" className="hover:opacity-100 transition-opacity">
                    ·ªêng inox
                  </a>
                </li>
                <li>
                  <a href="/san-pham" className="hover:opacity-100 transition-opacity">
                    Ph·ª• ki·ªán inox
                  </a>
                </li>
                <li>
                  <a href="/san-pham" className="hover:opacity-100 transition-opacity">
                    D·ªãch v·ª• gia c√¥ng
                  </a>
                </li>
              </ul>
            </div>

            <div>
              <h4 className="font-medium mb-6">C√¥ng ty</h4>
              <ul className="space-y-3 font-light opacity-90">
                <li>
                  <a href="/gioi-thieu" className="hover:opacity-100 transition-opacity">
                    Gi·ªõi thi·ªáu
                  </a>
                </li>
                <li>
                  <a href="/tin-tuc" className="hover:opacity-100 transition-opacity">
                    Tin t·ª©c
                  </a>
                </li>
                <li>
                  <a href="/dang-ky-dai-ly" className="hover:opacity-100 transition-opacity">
                    ƒêƒÉng k√Ω ƒë·∫°i l√Ω
                  </a>
                </li>
                <li>
                  <a href="/lien-he" className="hover:opacity-100 transition-opacity">
                    Li√™n h·ªá
                  </a>
                </li>
              </ul>
            </div>
          </div>

          <div className="border-t border-primary-foreground/20 mt-12 pt-8 text-center">
            <p className="font-light opacity-70">¬© 2025 C√¥ng ty TNHH Ph∆∞∆°ng Thu·∫≠n Ph√°t. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>
      </footer>
    </div>
  )
}
